{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rick\\\\Github Repositories\\\\formik-form\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useFormik } from \"formik\"; // TODO: import useFormik from formik library\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // TODO: add a const called formik assigned to useFormik()\n  const formik = useFormik({\n    initialValues: {\n      emailField: '',\n      pswField: ''\n    },\n    onSubmit: () => {\n      alert('Login successful');\n    },\n    validate: values => {\n      let errors = {};\n\n      if (!values.emailField) {\n        errors.emailError = 'Field required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.emailField)) {\n        errors.emailError = 'Username should be an email';\n      }\n\n      if (!values.pswField) errors.pswError = 'Field required';\n      return errors;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"emailField\",\n          type: \"text\",\n          onChange: formik.handleChange,\n          value: formik.values.emailField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), formik.errors.emailError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        name: \"emailError\",\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 37\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"pswField\",\n          type: \"text\",\n          onChange: formik.handleChange,\n          value: formik.values.pswField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), formik.errors.pswError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        name: \"pswError\",\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.pswError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 35\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"submitBtn\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useFormik","App","formik","initialValues","emailField","pswField","onSubmit","alert","validate","values","errors","emailError","test","pswError","handleSubmit","handleChange","color"],"sources":["C:/Users/Rick/Github Repositories/formik-form/src/App.js"],"sourcesContent":["import React from \"react\";\nimport {useFormik} from \"formik\";\n\n// TODO: import useFormik from formik library\n\nfunction App() {\n  // TODO: add a const called formik assigned to useFormik()\n  const formik = useFormik({\n    initialValues: {\n      emailField: '',\n      pswField: ''\n    },\n    onSubmit: () => {\n      alert('Login successful');\n    },\n    validate: values => {\n      let errors = {};\n      if(!values.emailField) {\n        errors.emailError = 'Field required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.emailField)) {\n        errors.emailError = 'Username should be an email'\n      }\n      if(!values.pswField) errors.pswError = 'Field required';\n      return errors;\n    }\n  })\n\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n        <div>Email</div>\n        <div>\n          <input name=\"emailField\" type=\"text\" onChange={formik.handleChange} value={formik.values.emailField} />\n        </div>\n        {formik.errors.emailError ? <div name=\"emailError\" style={{color:'red'}}>{formik.errors.emailError}</div> : null}\n        <div>Password</div>\n        <div>\n          <input name=\"pswField\" type=\"text\" onChange={formik.handleChange} value={formik.values.pswField} />\n        </div>\n        {formik.errors.pswError ? <div name=\"pswError\" style={{color:'red'}}>{formik.errors.pswError}</div> : null}\n        <button type=\"submit\" name=\"submitBtn\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,QAAxB,C,CAEA;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb;EACA,MAAMC,MAAM,GAAGF,SAAS,CAAC;IACvBG,aAAa,EAAE;MACbC,UAAU,EAAE,EADC;MAEbC,QAAQ,EAAE;IAFG,CADQ;IAKvBC,QAAQ,EAAE,MAAM;MACdC,KAAK,CAAC,kBAAD,CAAL;IACD,CAPsB;IAQvBC,QAAQ,EAAEC,MAAM,IAAI;MAClB,IAAIC,MAAM,GAAG,EAAb;;MACA,IAAG,CAACD,MAAM,CAACL,UAAX,EAAuB;QACrBM,MAAM,CAACC,UAAP,GAAoB,gBAApB;MACD,CAFD,MAEO,IAAI,CAAC,4CAA4CC,IAA5C,CAAiDH,MAAM,CAACL,UAAxD,CAAL,EAA0E;QAC/EM,MAAM,CAACC,UAAP,GAAoB,6BAApB;MACD;;MACD,IAAG,CAACF,MAAM,CAACJ,QAAX,EAAqBK,MAAM,CAACG,QAAP,GAAkB,gBAAlB;MACrB,OAAOH,MAAP;IACD;EAjBsB,CAAD,CAAxB;EAoBA,oBACE;IAAA,uBACE;MAAM,QAAQ,EAAER,MAAM,CAACY,YAAvB;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,uBACE;UAAO,IAAI,EAAC,YAAZ;UAAyB,IAAI,EAAC,MAA9B;UAAqC,QAAQ,EAAEZ,MAAM,CAACa,YAAtD;UAAoE,KAAK,EAAEb,MAAM,CAACO,MAAP,CAAcL;QAAzF;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAFF,EAKGF,MAAM,CAACQ,MAAP,CAAcC,UAAd,gBAA2B;QAAK,IAAI,EAAC,YAAV;QAAuB,KAAK,EAAE;UAACK,KAAK,EAAC;QAAP,CAA9B;QAAA,UAA8Cd,MAAM,CAACQ,MAAP,CAAcC;MAA5D;QAAA;QAAA;QAAA;MAAA,QAA3B,GAA2G,IAL9G,eAME;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QANF,eAOE;QAAA,uBACE;UAAO,IAAI,EAAC,UAAZ;UAAuB,IAAI,EAAC,MAA5B;UAAmC,QAAQ,EAAET,MAAM,CAACa,YAApD;UAAkE,KAAK,EAAEb,MAAM,CAACO,MAAP,CAAcJ;QAAvF;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAPF,EAUGH,MAAM,CAACQ,MAAP,CAAcG,QAAd,gBAAyB;QAAK,IAAI,EAAC,UAAV;QAAqB,KAAK,EAAE;UAACG,KAAK,EAAC;QAAP,CAA5B;QAAA,UAA4Cd,MAAM,CAACQ,MAAP,CAAcG;MAA1D;QAAA;QAAA;QAAA;MAAA,QAAzB,GAAqG,IAVxG,eAWE;QAAQ,IAAI,EAAC,QAAb;QAAsB,IAAI,EAAC,WAA3B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD;;GAvCQZ,G;UAEQD,S;;;KAFRC,G;AAyCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}